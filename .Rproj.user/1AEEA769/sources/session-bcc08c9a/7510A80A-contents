---
title: "R Notebook"
output: html_notebook
---

```{r}
# Load the package required to read JSON files.
library(rjson)
library(tidyverse)
# Give the input file name to the function.
spotify_songs_json1 <- fromJSON(file="raw_data/StreamingHistory0.json")
spotify_songs_json2 <- fromJSON(file="raw_data/StreamingHistory1.json")
spotify_library_json <- fromJSON(file="raw_data/YourLibrary.json")
spotify_playlists_json <- fromJSON(file="raw_data/Playlist1.json")

# Convert JSON file to dataframe.
json_data_frame1 <- as.data.frame(spotify_songs_json1)
json_data_frame2 <- as.data.frame(spotify_songs_json2)
#json_data_frame3 <- as.data.frame(spotify_library_json)
json_data_frame4 <- as.data.frame(spotify_playlists_json)
```

First, will identify what data types I've got:
```{r}
# summary(json_data_frame1)
# loads of artistName, trackName, msPlayed, endTime on repeat

json_data_frame1 %>% 
  select(endTime:msPlayed) %>% 
  sapply(class)

```
Three of type character and one of type numeric, could split these up.

endTime should be a date but can fix this post-pivot.



Pivot and clean:
```{r}
# found this method for dealing with very wide data format
names0 <- sub(".\\d+$", "", names(json_data_frame1)) # col names
names.suffix <- sub("^\\D+", "", names(json_data_frame1)) # numbers from col names
spotify_songs1 <- tapply(as.matrix(json_data_frame1), list(names.suffix, names0), c)[, unique(names0)]

names0 <- sub(".\\d+$", "", names(json_data_frame2)) # col names
names.suffix <- sub("^\\D+", "", names(json_data_frame2)) # numbers from col names
spotify_songs2 <- tapply(as.matrix(json_data_frame2), list(names.suffix, names0), c)[, unique(names0)]

spotify_songs_clean <- as_tibble(spotify_songs1) %>% 
  bind_rows(as_tibble(spotify_songs2)) %>% 
  janitor::clean_names() %>% 
  mutate(track_name = str_to_title(track_name)) %>% 
  relocate(track_name, .before = 1) %>% 
  rename(date_listened = end_time) %>% 
  mutate(date_listened = ymd_hm(date_listened))
  
```





Write data
```{r}
write_csv(spotify_songs_clean, here::here("clean_data/spotify_songs.csv"))
```

