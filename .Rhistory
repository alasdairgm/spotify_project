# Load the package required to read JSON files.
library(rjson)
# Load the package required to read JSON files.
library(rjson)
library(tidyverse)
# Give the input file name to the function.
myData <- fromJSON(file="raw_data/StreamingHistory1.json")
# Convert JSON file to dataframe.
json_data_frame <- as.data.frame(myData)
json_data_frame %>%
pivot_longer(cols = -starts_with("trackName"),
names_to = "measurement",
values_to = "measurement_val") %>%
head()
summary(json_data_frame)
json_data_frame %>%
tail(1)
json_data_frame %>%
select(-1)
json_data_frame %>%
select(-1)
json_data_frame %>%
select(1)
View(json_data_frame)
json_data_frame %>%
select(endTime:msPlayed)
json_data_frame %>%
select(endTime:msPlayed) %>%
sapply(class)
library(lubridate)
json_data_frame %>%
select(-msPlayed) %>%
pivot_longer(cols = -starts_with("trackName"),
names_to = "measurement",
values_to = "measurement_val") %>%
head()
json_data_frame %>%
select(-starts_with("msPlayed")
json_data_frame %>%
json_data_frame %>%
select(-starts_with("msPlayed"))
json_data_frame %>%
select(-starts_with("msPlayed")) %>%
pivot_longer(cols = -starts_with("trackName"),
names_to = "measurement",
values_to = "measurement_val") %>%
head()
json_data_frame %>%
select(endTime:msPlayed) %>%
select(-starts_with("msPlayed"))
json_data_frame %>%
select(endTime:msPlayed) %>%
select(-starts_with("msPlayed")) %>%
pivot_longer(cols = -starts_with("trackName"),
names_to = "measurement",
values_to = "measurement_val") %>%
head()
json_data_frame %>%
select(endTime:msPlayed) %>%
select(-starts_with("msPlayed")) %>%
pivot_longer(cols = -starts_with("trackName"),
names_to = "key",
values_to = "value") %>%
head()
spotify_songs_char <-
json_data_frame %>%
select(endTime:msPlayed) %>%
select(-starts_with("msPlayed")) %>%
pivot_longer(
#cols = -starts_with("trackName"),
names_to = "key",
values_to = "value") %>%
head()
json_data_frame %>%
rename(.cols = everything(), .fn = ~str_remove_all(.x, "[0-9]"))
json_data_frame %>%
rename(where(.cols = everything(), .fn = ~str_remove_all(.x, "[0-9]")))
json_data_frame %>%
rename_with(.cols = everything(), .fn = ~str_remove_all(.x, "[0-9]"))
json_data_frame %>%
rename_with(.cols = everything(), .fn = ~str_remove_all(.x, ".[0-9]"))
df.melted <- melt(t(json_data_frame))
install.packages("reshape2")
library(reshape2)
df.melted <- melt(t(json_data_frame))
df.melted
melt(t(json_data_frame)) %>%
mutate(Var1 = str_remove_all(Var1, ".[0-9]"))
melt(t(json_data_frame)) %>%
mutate(Var1 = str_remove_all(Var1, ".[0-9]")) %>%
dcast(df.melted, (length(nrow(df.melted)) -1) %/% 3 ~ Var1)[,-1]
sub("\\d+$", "", names(json_data_frame))
# Load the package required to read JSON files.
library(rjson)
library(tidyverse)
# Give the input file name to the function.
myData <- fromJSON(file="raw_data/StreamingHistory1.json")
# Convert JSON file to dataframe.
json_data_frame <- as.data.frame(myData)
sub("\\d+$", "", names(json_data_frame))
sub(".\\d+$", "", names(json_data_frame))
names0 <- sub(".\\d+$", "", names(json_data_frame))
sub("^\\D+", "", names(json_data_frame))
names.suffix <- sub("^\\D+", "", names(json_data_frame)) # numbers from col names
tapply(as.matrix(json_data_frame), list(names.suffix, names0), c)[, unique(names0)]
spotify_songs <- tapply(as.matrix(json_data_frame), list(names.suffix, names0), c)[, unique(names0)]
View(myData)
View(myData)
View(spotify_songs)
spotify_songs %>%
head()
as_tibble(spotify_songs) %>%
head()
as_tibble(spotify_songs) %>%
tail()
as_tibble(spotify_songs) %>%
tail() %>%
count()
as_tibble(spotify_songs) %>%
tail(
as_tibble(spotify_songs) %>%
tail()
as_tibble(spotify_songs) %>%
tail()
as_tibble(spotify_songs) %>%
janitor::clean_names() %>%
count(track_name)
as_tibble(spotify_songs) %>%
janitor::clean_names() %>%
count(track_name) %>%
order_by(desc(n))
as_tibble(spotify_songs) %>%
janitor::clean_names() %>%
count(track_name)
as_tibble(spotify_songs) %>%
janitor::clean_names() %>%
count(track_name) %>%
order_by(n)
as_tibble(spotify_songs) %>%
janitor::clean_names() %>%
count(track_name) %>%
arrange(desc(n))
spotify_songs_clean <- spotify_songs %>%
janitor::clean_names() %>%
mutate(track_name = str_to_title(track_name))
spotify_songs_clean <- spotify_songs %>%
as_tibble() %>%
janitor::clean_names() %>%
mutate(track_name = str_to_title(track_name))
spotify_songs_clean
spotify_songs_clean %>%
count(track_name) %>%
arrange(desc(n))
# Load the package required to read JSON files.
library(rjson)
library(tidyverse)
# Give the input file name to the function.
spotify_songs_json1 <- fromJSON(file="raw_data/StreamingHistory0.json")
spotify_songs_json2 <- fromJSON(file="raw_data/StreamingHistory1.json")
# Convert JSON file to dataframe.
json_data_frame1 <- as.data.frame(spotify_songs_json1)
json_data_frame2 <- as.data.frame(spotify_songs_json2)
summary(json_data_frame1)
json_data_frame1 %>%
select(endTime:msPlayed) %>%
sapply(class)
names0 <- sub(".\\d+$", "", names(json_data_frame1)) # col names
names.suffix <- sub("^\\D+", "", names(json_data_frame1)) # numbers from col names
spotify_songs1 <- tapply(as.matrix(json_data_frame1), list(names.suffix, names0), c)[, unique(names0)]
View(spotify_songs1)
names0 <- sub(".\\d+$", "", names(json_data_frame2)) # col names
names.suffix <- sub("^\\D+", "", names(json_data_frame2)) # numbers from col names
spotify_songs2 <- tapply(as.matrix(json_data_frame2), list(names.suffix, names0), c)[, unique(names0)]
as_tibble(spotify_songs1) %>%
bind_rows(as_tibble(spotify_songs2))
as_tibble(spotify_songs1) %>%
bind_rows(as_tibble(spotify_songs2)) %>%
janitor::clean_names() %>%
mutate(track_name = str_to_title(track_name))
spotify_songs_clean <- as_tibble(spotify_songs1) %>%
bind_rows(as_tibble(spotify_songs2)) %>%
janitor::clean_names() %>%
mutate(track_name = str_to_title(track_name))
spotify_songs_clean %>%
count(track_name) %>%
arrange(desc(n))
# Load the package required to read JSON files.
library(rjson)
library(tidyverse)
# Give the input file name to the function.
spotify_songs_json1 <- fromJSON(file="raw_data/StreamingHistory0.json")
spotify_songs_json2 <- fromJSON(file="raw_data/StreamingHistory1.json")
# Convert JSON file to dataframe.
json_data_frame1 <- as.data.frame(spotify_songs_json1)
json_data_frame2 <- as.data.frame(spotify_songs_json2)
summary(json_data_frame1)
# loads of artistName, trackName, msPlayed, endTime on repeat
json_data_frame1 %>%
select(endTime:msPlayed) %>%
sapply(class)
# found this method for dealing with very wide data format
names0 <- sub(".\\d+$", "", names(json_data_frame1)) # col names
names.suffix <- sub("^\\D+", "", names(json_data_frame1)) # numbers from col names
spotify_songs1 <- tapply(as.matrix(json_data_frame1), list(names.suffix, names0), c)[, unique(names0)]
names0 <- sub(".\\d+$", "", names(json_data_frame2)) # col names
names.suffix <- sub("^\\D+", "", names(json_data_frame2)) # numbers from col names
spotify_songs2 <- tapply(as.matrix(json_data_frame2), list(names.suffix, names0), c)[, unique(names0)]
spotify_songs_clean <- as_tibble(spotify_songs1) %>%
bind_rows(as_tibble(spotify_songs2)) %>%
janitor::clean_names() %>%
mutate(track_name = str_to_title(track_name))
spotify_songs_clean
spotify_songs_clean %>%
rename(date_listend = end_time)
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
as.Date(date_listened, "%Y-%m-%d")
spotify_songs_clean %>%
rename(date_listened = end_time)
install.packages("tsibble")
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
as.Date(date_listened, '%Y-%m-%d %H:%M')
spotify_songs_clean %>%
rename(date_listened = end_time)
spotify_songs_clean %>%
rename(date_listened = end_time)
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
ymd_hm(date_listened)
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
ymd_hm(date_listened)
spotify_songs_clean %>%
rename(date_listened = end_time)
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
mutate(date_listened = ymd_hm(date_listened))
spotify_songs_clean <- as_tibble(spotify_songs1) %>%
bind_rows(as_tibble(spotify_songs2)) %>%
janitor::clean_names() %>%
mutate(track_name = str_to_title(track_name),
.before = end_time)
spotify_songs_clean
as_tibble(spotify_songs1) %>%
bind_rows(as_tibble(spotify_songs2)) %>%
janitor::clean_names() %>%
mutate(track_name = str_to_title(track_name),
.before = end_time)
spotify_songs_clean <- as_tibble(spotify_songs1) %>%
bind_rows(as_tibble(spotify_songs2)) %>%
janitor::clean_names() %>%
mutate(track_name = str_to_title(track_name)) %>%
relocate(track_name, .before = 1)
spotify_songs_clean
spotify_songs_clean <- as_tibble(spotify_songs1) %>%
bind_rows(as_tibble(spotify_songs2)) %>%
janitor::clean_names() %>%
mutate(track_name = str_to_title(track_name)) %>%
relocate(track_name, .before = 1)
spotify_songs_clean %>%
count(track_name) %>%
arrange(desc(n))
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
mutate(date_listened = ymd_hm(date_listened))
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
mutate(date_listened = ymd_hm(date_listened)) %>%
separate(date_listened, into = c(date_listened, time_listened),
sep = " ")
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
mutate(date_listened = ymd_hm(date_listened))
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
mutate(date_listened = ymd_hm(date_listened)) %>%
separate(date_listened, into = c("date_listened", "time_listened"),
sep = " ")
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
separate(date_listened, into = c("date_listened", "time_listened"),
sep = " ") %>%
mutate(date_listened = ymd(date_listened))
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
separate(date_listened, into = c("date_listened", "time_listened"),
sep = " ") %>%
mutate(date_listened = ymd(date_listened),
time_listened = hm(time_listened))
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
separate(date_listened, into = c("date_listened", "time_listened"),
sep = " ") %>%
mutate(date_listened = ymd(date_listened),
time_listened = hms(time_listened))
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
separate(date_listened, into = c("date_listened", "time_listened"),
sep = " ") %>%
mutate(date_listened = ymd(date_listened),
time_listened = hm(time_listened))
time_listened = as.POSIXct(time_listened, "%H:%M")
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
separate(date_listened, into = c("date_listened", "time_listened"),
sep = " ") %>%
mutate(date_listened = ymd(date_listened),
time_listened = as.POSIXct(time_listened, "%H:%M"))
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
separate(date_listened, into = c("date_listened", "time_listened"),
sep = " "
spotify_songs_clean %>%
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
separate(date_listened, into = c("date_listened", "time_listened"),
sep = " ")
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
separate(date_listened, into = c("date_listened", "time_listened"),
sep = " ") %>%
mutate(date_listened = ymd(date_listened),
time_listened = as.POSIXct(time_listened, format = "%H:%M"))
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
separate(date_listened, into = c("date_listened", "time_listened"),
sep = " ") %>%
mutate(date_listened = ymd(date_listened),
time_listened = as.POSIXct(time_listened, format = "%H:%M")) %>%
mutate(time_listened = sub("^\\S+\\s+", "", time_listened
))
spotify_songs_clean
spotify_songs_clean <- as_tibble(spotify_songs1) %>%
bind_rows(as_tibble(spotify_songs2)) %>%
janitor::clean_names() %>%
mutate(track_name = str_to_title(track_name)) %>%
relocate(track_name, .before = 1) %>%
rename(date_listened = end_time)
spotify_songs_clean <- as_tibble(spotify_songs1) %>%
bind_rows(as_tibble(spotify_songs2)) %>%
janitor::clean_names() %>%
mutate(track_name = str_to_title(track_name)) %>%
relocate(track_name, .before = 1) %>%
rename(date_listened = end_time) %>%
mutate(date_listened = ymd_hm(date_listened))
spotify_songs_clean
write_csv(spotify_songs_clean, here::here("clean_data/spotify_songs.csv"))
install.packages("here")
write_csv(spotify_songs_clean, here::here("clean_data/spotify_songs.csv"))
