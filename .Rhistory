tail()
as_tibble(spotify_songs) %>%
janitor::clean_names() %>%
count(track_name)
as_tibble(spotify_songs) %>%
janitor::clean_names() %>%
count(track_name) %>%
order_by(desc(n))
as_tibble(spotify_songs) %>%
janitor::clean_names() %>%
count(track_name)
as_tibble(spotify_songs) %>%
janitor::clean_names() %>%
count(track_name) %>%
order_by(n)
as_tibble(spotify_songs) %>%
janitor::clean_names() %>%
count(track_name) %>%
arrange(desc(n))
spotify_songs_clean <- spotify_songs %>%
janitor::clean_names() %>%
mutate(track_name = str_to_title(track_name))
spotify_songs_clean <- spotify_songs %>%
as_tibble() %>%
janitor::clean_names() %>%
mutate(track_name = str_to_title(track_name))
spotify_songs_clean
spotify_songs_clean %>%
count(track_name) %>%
arrange(desc(n))
# Load the package required to read JSON files.
library(rjson)
library(tidyverse)
# Give the input file name to the function.
spotify_songs_json1 <- fromJSON(file="raw_data/StreamingHistory0.json")
spotify_songs_json2 <- fromJSON(file="raw_data/StreamingHistory1.json")
# Convert JSON file to dataframe.
json_data_frame1 <- as.data.frame(spotify_songs_json1)
json_data_frame2 <- as.data.frame(spotify_songs_json2)
summary(json_data_frame1)
json_data_frame1 %>%
select(endTime:msPlayed) %>%
sapply(class)
names0 <- sub(".\\d+$", "", names(json_data_frame1)) # col names
names.suffix <- sub("^\\D+", "", names(json_data_frame1)) # numbers from col names
spotify_songs1 <- tapply(as.matrix(json_data_frame1), list(names.suffix, names0), c)[, unique(names0)]
View(spotify_songs1)
names0 <- sub(".\\d+$", "", names(json_data_frame2)) # col names
names.suffix <- sub("^\\D+", "", names(json_data_frame2)) # numbers from col names
spotify_songs2 <- tapply(as.matrix(json_data_frame2), list(names.suffix, names0), c)[, unique(names0)]
as_tibble(spotify_songs1) %>%
bind_rows(as_tibble(spotify_songs2))
as_tibble(spotify_songs1) %>%
bind_rows(as_tibble(spotify_songs2)) %>%
janitor::clean_names() %>%
mutate(track_name = str_to_title(track_name))
spotify_songs_clean <- as_tibble(spotify_songs1) %>%
bind_rows(as_tibble(spotify_songs2)) %>%
janitor::clean_names() %>%
mutate(track_name = str_to_title(track_name))
spotify_songs_clean %>%
count(track_name) %>%
arrange(desc(n))
# Load the package required to read JSON files.
library(rjson)
library(tidyverse)
# Give the input file name to the function.
spotify_songs_json1 <- fromJSON(file="raw_data/StreamingHistory0.json")
spotify_songs_json2 <- fromJSON(file="raw_data/StreamingHistory1.json")
# Convert JSON file to dataframe.
json_data_frame1 <- as.data.frame(spotify_songs_json1)
json_data_frame2 <- as.data.frame(spotify_songs_json2)
summary(json_data_frame1)
# loads of artistName, trackName, msPlayed, endTime on repeat
json_data_frame1 %>%
select(endTime:msPlayed) %>%
sapply(class)
# found this method for dealing with very wide data format
names0 <- sub(".\\d+$", "", names(json_data_frame1)) # col names
names.suffix <- sub("^\\D+", "", names(json_data_frame1)) # numbers from col names
spotify_songs1 <- tapply(as.matrix(json_data_frame1), list(names.suffix, names0), c)[, unique(names0)]
names0 <- sub(".\\d+$", "", names(json_data_frame2)) # col names
names.suffix <- sub("^\\D+", "", names(json_data_frame2)) # numbers from col names
spotify_songs2 <- tapply(as.matrix(json_data_frame2), list(names.suffix, names0), c)[, unique(names0)]
spotify_songs_clean <- as_tibble(spotify_songs1) %>%
bind_rows(as_tibble(spotify_songs2)) %>%
janitor::clean_names() %>%
mutate(track_name = str_to_title(track_name))
spotify_songs_clean
spotify_songs_clean %>%
rename(date_listend = end_time)
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
as.Date(date_listened, "%Y-%m-%d")
spotify_songs_clean %>%
rename(date_listened = end_time)
install.packages("tsibble")
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
as.Date(date_listened, '%Y-%m-%d %H:%M')
spotify_songs_clean %>%
rename(date_listened = end_time)
spotify_songs_clean %>%
rename(date_listened = end_time)
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
ymd_hm(date_listened)
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
ymd_hm(date_listened)
spotify_songs_clean %>%
rename(date_listened = end_time)
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
mutate(date_listened = ymd_hm(date_listened))
spotify_songs_clean <- as_tibble(spotify_songs1) %>%
bind_rows(as_tibble(spotify_songs2)) %>%
janitor::clean_names() %>%
mutate(track_name = str_to_title(track_name),
.before = end_time)
spotify_songs_clean
as_tibble(spotify_songs1) %>%
bind_rows(as_tibble(spotify_songs2)) %>%
janitor::clean_names() %>%
mutate(track_name = str_to_title(track_name),
.before = end_time)
spotify_songs_clean <- as_tibble(spotify_songs1) %>%
bind_rows(as_tibble(spotify_songs2)) %>%
janitor::clean_names() %>%
mutate(track_name = str_to_title(track_name)) %>%
relocate(track_name, .before = 1)
spotify_songs_clean
spotify_songs_clean <- as_tibble(spotify_songs1) %>%
bind_rows(as_tibble(spotify_songs2)) %>%
janitor::clean_names() %>%
mutate(track_name = str_to_title(track_name)) %>%
relocate(track_name, .before = 1)
spotify_songs_clean %>%
count(track_name) %>%
arrange(desc(n))
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
mutate(date_listened = ymd_hm(date_listened))
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
mutate(date_listened = ymd_hm(date_listened)) %>%
separate(date_listened, into = c(date_listened, time_listened),
sep = " ")
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
mutate(date_listened = ymd_hm(date_listened))
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
mutate(date_listened = ymd_hm(date_listened)) %>%
separate(date_listened, into = c("date_listened", "time_listened"),
sep = " ")
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
separate(date_listened, into = c("date_listened", "time_listened"),
sep = " ") %>%
mutate(date_listened = ymd(date_listened))
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
separate(date_listened, into = c("date_listened", "time_listened"),
sep = " ") %>%
mutate(date_listened = ymd(date_listened),
time_listened = hm(time_listened))
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
separate(date_listened, into = c("date_listened", "time_listened"),
sep = " ") %>%
mutate(date_listened = ymd(date_listened),
time_listened = hms(time_listened))
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
separate(date_listened, into = c("date_listened", "time_listened"),
sep = " ") %>%
mutate(date_listened = ymd(date_listened),
time_listened = hm(time_listened))
time_listened = as.POSIXct(time_listened, "%H:%M")
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
separate(date_listened, into = c("date_listened", "time_listened"),
sep = " ") %>%
mutate(date_listened = ymd(date_listened),
time_listened = as.POSIXct(time_listened, "%H:%M"))
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
separate(date_listened, into = c("date_listened", "time_listened"),
sep = " "
spotify_songs_clean %>%
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
separate(date_listened, into = c("date_listened", "time_listened"),
sep = " ")
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
separate(date_listened, into = c("date_listened", "time_listened"),
sep = " ") %>%
mutate(date_listened = ymd(date_listened),
time_listened = as.POSIXct(time_listened, format = "%H:%M"))
spotify_songs_clean %>%
rename(date_listened = end_time) %>%
separate(date_listened, into = c("date_listened", "time_listened"),
sep = " ") %>%
mutate(date_listened = ymd(date_listened),
time_listened = as.POSIXct(time_listened, format = "%H:%M")) %>%
mutate(time_listened = sub("^\\S+\\s+", "", time_listened
))
spotify_songs_clean
spotify_songs_clean <- as_tibble(spotify_songs1) %>%
bind_rows(as_tibble(spotify_songs2)) %>%
janitor::clean_names() %>%
mutate(track_name = str_to_title(track_name)) %>%
relocate(track_name, .before = 1) %>%
rename(date_listened = end_time)
spotify_songs_clean <- as_tibble(spotify_songs1) %>%
bind_rows(as_tibble(spotify_songs2)) %>%
janitor::clean_names() %>%
mutate(track_name = str_to_title(track_name)) %>%
relocate(track_name, .before = 1) %>%
rename(date_listened = end_time) %>%
mutate(date_listened = ymd_hm(date_listened))
spotify_songs_clean
write_csv(spotify_songs_clean, here::here("clean_data/spotify_songs.csv"))
install.packages("here")
write_csv(spotify_songs_clean, here::here("clean_data/spotify_songs.csv"))
# Load the package required to read JSON files.
library(rjson)
library(tidyverse)
# Give the input file name to the function.
spotify_songs_json1 <- fromJSON(file="raw_data/StreamingHistory0.json")
spotify_songs_json2 <- fromJSON(file="raw_data/StreamingHistory1.json")
spotify_library_json <- fromJSON(file="raw_data/YourLibrary.json")
# Convert JSON file to dataframe.
json_data_frame1 <- as.data.frame(spotify_songs_json1)
json_data_frame2 <- as.data.frame(spotify_songs_json2)
json_data_frame3 <- as.data.frame(spotify_library_json)
View(spotify_library_json)
# Load the package required to read JSON files.
library(rjson)
library(tidyverse)
# Give the input file name to the function.
spotify_songs_json1 <- fromJSON(file="raw_data/StreamingHistory0.json")
spotify_songs_json2 <- fromJSON(file="raw_data/StreamingHistory1.json")
spotify_library_json <- fromJSON(file="raw_data/YourLibrary.json")
spotify_playlists_json <- fromJSON(file="raw_data/Playlist1.json")
# Convert JSON file to dataframe.
json_data_frame1 <- as.data.frame(spotify_songs_json1)
json_data_frame2 <- as.data.frame(spotify_songs_json2)
json_data_frame3 <- as.data.frame(spotify_library_json)
# Load the package required to read JSON files.
library(rjson)
library(tidyverse)
# Give the input file name to the function.
spotify_songs_json1 <- fromJSON(file="raw_data/StreamingHistory0.json")
spotify_songs_json2 <- fromJSON(file="raw_data/StreamingHistory1.json")
spotify_library_json <- fromJSON(file="raw_data/YourLibrary.json")
spotify_playlists_json <- fromJSON(file="raw_data/Playlist1.json")
# Convert JSON file to dataframe.
json_data_frame1 <- as.data.frame(spotify_songs_json1)
json_data_frame2 <- as.data.frame(spotify_songs_json2)
#json_data_frame3 <- as.data.frame(spotify_library_json)
json_data_frame4 <- as.data.frame(spotify_playlists_json)
library(tidyverse)
spotify_songs <- read_csv(here::here("clean_data/spotify_songs.csv"))
spotify_songs_clean %>%
count(track_name) %>%
arrange(desc(n))
spotify_songs %>%
count(track_name) %>%
arrange(desc(n))
spotify_songs
spotify_songs %>%
summarise(range(date_listened))
```{r}
spotify_songs %>%
count(track_name) %>%
arrange(desc(n))
spotify_songs %>%
count(track_name) %>%
arrange(desc(n)) %>%
slice_max(n = 10)
spotify_songs %>%
count(track_name) %>%
arrange(desc(n)) %>%
head(10)
spotify_songs %>%
count(track_name) %>%
slice_max(order_by = n)
spotify_songs %>%
count(track_name) %>%
slice_max(n = 10, order_by = n, with_ties = TRUE)
spotify_songs %>%
count(track_name) %>%
slice_max(n = 10, order_by = n, with_ties = TRUE) %>%
ggplot(aes(x = track_name, y = n)) +
geom_bar()
spotify_songs %>%
count(track_name) %>%
slice_max(n = 10, order_by = n, with_ties = TRUE) %>%
ggplot(aes(x = track_name, y = n)) +
geom_col()
spotify_songs %>%
count(track_name) %>%
slice_max(n = 10, order_by = n, with_ties = TRUE) %>%
ggplot(aes(x = track_name, y = n)) +
geom_col() +
coord_flip()
spotify_songs %>%
count(track_name) %>%
slice_max(n = 10, order_by = n, with_ties = TRUE) %>%
ggplot(aes(x = reorder(track_name, n), y = n)) +
geom_col() +
coord_flip()
spotify_songs %>%
count(track_name) %>%
slice_max(n = 10, order_by = n, with_ties = TRUE) %>%
ggplot(aes(x = reorder(track_name, n), y = n)) +
geom_col() +
coord_flip() +
scale_fill_brewer(palette = 1)
spotify_songs %>%
count(track_name) %>%
slice_max(n = 10, order_by = n, with_ties = TRUE) %>%
ggplot(aes(x = reorder(track_name, n), y = n)) +
geom_col() +
coord_flip() +
scale_fill_distiller(palette = 1)
?brewer
spotify_songs %>%
count(track_name) %>%
slice_max(n = 10, order_by = n, with_ties = TRUE) %>%
ggplot(aes(x = reorder(track_name, n), y = n)) +
geom_col() +
coord_flip() +
scale_fill_brewer(palette = "Set 1")
spotify_songs %>%
count(track_name) %>%
slice_max(n = 10, order_by = n, with_ties = TRUE) %>%
ggplot(aes(x = reorder(track_name, n), y = n)) +
geom_col(fill = track_name) +
coord_flip() +
scale_fill_brewer(palette = "Set 1")
spotify_songs %>%
count(track_name) %>%
slice_max(n = 10, order_by = n, with_ties = TRUE)
spotify_songs %>%
count(track_name) %>%
slice_max(n = 10, order_by = n, with_ties = TRUE) %>%
ggplot(aes(x = reorder(track_name, n), y = n)) +
geom_col(aes(fill = track_name)) +
coord_flip() +
scale_fill_brewer(palette = "Set 1")
spotify_songs %>%
count(track_name) %>%
slice_max(n = 10, order_by = n, with_ties = TRUE) %>%
ggplot(aes(x = reorder(track_name, n), y = n)) +
geom_col(aes(fill = track_name)) +
coord_flip()
spotify_songs %>%
count(track_name) %>%
slice_max(n = 10, order_by = n, with_ties = TRUE) %>%
ggplot(aes(x = reorder(track_name, n), y = n)) +
geom_col(aes(fill = track_name), show.legend = FALSE) +
coord_flip()
spotify_songs %>%
count(track_name) %>%
slice_max(n = 10, order_by = n, with_ties = TRUE) %>%
ggplot(aes(x = reorder(track_name, n), y = n)) +
geom_col(aes(fill = track_name), show.legend = FALSE) +
coord_flip() +
labs(title = "My most-listened-to songs on Spotify",
subtitle = "Aug 2022 - Aug 2023\n")
spotify_songs %>%
count(track_name) %>%
slice_max(n = 10, order_by = n, with_ties = TRUE) %>%
ggplot(aes(x = reorder(track_name, n), y = n)) +
geom_col(aes(fill = track_name), show.legend = FALSE) +
coord_flip() +
labs(title = "My most-listened-to songs on Spotify",
subtitle = "Aug 2022 - Aug 2023\n",
x = "Song title")
spotify_songs %>%
count(track_name) %>%
slice_max(n = 10, order_by = n, with_ties = TRUE) %>%
ggplot(aes(x = reorder(track_name, n), y = n)) +
geom_col(aes(fill = track_name), show.legend = FALSE) +
coord_flip() +
labs(title = "My most-listened-to songs on Spotify",
subtitle = "Aug 2022 - Aug 2023\n",
x = "Song title",
y = "Number of plays")
spotify_songs %>%
slice_min(ms_played)
spotify_songs %>%
slice_max(ms_played)
spotify_songs %>%
slice_max(ms_played, n = 10)
spotify_songs %>%
filter(ms_played >= 60000)
spotify_songs %>%
mutate(mins_played = ms_played/60000)
60000*8
spotify_songs <- spotify_songs %>%
filter(ms_played >= 60000,
ms_played < 60000*8)
spotify_songs %>%
summarise(range(date_listened))
spotify_songs %>%
count(track_name) %>%
arrange(desc(n))
spotify_songs %>%
count(track_name) %>%
slice_max(n = 10, order_by = n, with_ties = TRUE) %>%
ggplot(aes(x = reorder(track_name, n), y = n)) +
geom_col(aes(fill = track_name), show.legend = FALSE) +
coord_flip() +
labs(title = "My most-listened-to songs on Spotify",
subtitle = "Aug 2022 - Aug 2023\n",
x = "Song title",
y = "Number of plays")
#scale_fill_brewer(palette = "Set 1")
spotify_songs %>%
count(track_name) %>%
arrange(desc(n))
spotify_songs %>%
count(track_name) %>%
slice_max(n = 10, order_by = n, with_ties = TRUE)
spotify_songs %>%
# count(track_name) %>%
slice_max(n = 10, order_by = n, with_ties = TRUE)
spotify_songs
spotify_songs %>%
count(track_name) %>%
slice_max(n = 10, order_by = n, with_ties = TRUE)
spotify_songs %>%
count(track_name) %>%
slice_max(n = 10, order_by = n, with_ties = TRUE) %>%
ggplot(aes(x = reorder(track_name, n), y = n)) +
geom_col(aes(fill = track_name), show.legend = FALSE) +
coord_flip() +
labs(title = "My most-listened-to songs on Spotify",
subtitle = "Aug 2022 - Aug 2023\n",
x = "Song title",
y = "Number of plays")
#scale_fill_brewer(palette = "Set 1")
spotify_songs %>%
count(artist) %>%
arrange(desc(n))
spotify_songs
spotify_songs %>%
count(artist_name) %>%
arrange(desc(n))
spotify_songs %>%
count(artist_name) %>%
slice_max(n = 10, order_by = n, with_ties = TRUE) %>%
ggplot(aes(x = reorder(artist_name, n), y = n)) +
geom_col(aes(fill = artist_name), show.legend = FALSE) +
coord_flip() +
labs(title = "My most-listened-to artitsts on Spotify",
subtitle = "Aug 2022 - Aug 2023\n",
x = "Artist",
y = "Number of plays")
spotify_songs %>%
group_by(artist_name) %>%
summarise(total_time_listened = sum(ms_played))
spotify_songs %>%
group_by(artist_name) %>%
summarise(total_time_listened = sum(ms_played)) %>%
slice_max(total_time_listened)
spotify_songs %>%
group_by(artist_name) %>%
summarise(total_time_listened = sum(ms_played)) %>%
slice_max(total_time_listened, n = 10)
spotify_songs %>%
group_by(artist_name) %>%
summarise(total_time_listened = sum(ms_played)) %>%
slice_max(total_time_listened, n = 10) %>%
mutate(total_time_listened = total_time_listened/60000)
spotify_songs %>%
group_by(artist_name) %>%
summarise(total_time_listened = sum(ms_played)) %>%
slice_max(total_time_listened, n = 10) %>%
mutate(total_time_listened = total_time_listened/60000/60)
spotify_songs %>%
group_by(artist_name) %>%
summarise(total_time_listened = sum(ms_played)) %>%
slice_max(total_time_listened, n = 10) %>%
mutate(total_time_listened_hrs = total_time_listened/60000/60)
spotify_songs %>%
group_by(artist_name) %>%
summarise(total_time_listened = sum(ms_played)) %>%
slice_max(total_time_listened, n = 10) %>%
mutate(total_time_listened_hrs = round(total_time_listened/60000/60), 2)
spotify_songs %>%
group_by(artist_name) %>%
summarise(total_time_listened = sum(ms_played)) %>%
slice_max(total_time_listened, n = 10) %>%
mutate(total_time_listened_hrs = round(total_time_listened/60000/60, 2))
spotify_songs %>%
group_by(artist_name) %>%
summarise(total_time_listened = sum(ms_played)) %>%
slice_max(total_time_listened, n = 10) %>%
mutate(total_time_listened_hrs = round(total_time_listened/60000/60, 2)) %>%
ggplot(aes(x = reorder(artist_name, total_time_listened_hrs), y = total_time_listened_hrs)) +
geom_col(aes(fill = artist_name), show.legend = FALSE) +
coord_flip() +
labs(title = "My longest-listened-to artists on Spotify",
subtitle = "Aug 2022 - Aug 2023\n",
x = "Artist",
y = "Total time played (hours)")
